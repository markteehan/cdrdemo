{{- $_ := required "Namespace is required" .Release.Namespace }}
{{- $_ := required "Name of operator is required." $.Values.name }}
{{- $_ := required "Docker Repository FQDN path is required" .Values.global.provider.registry.fqdn }}
{{- $jsonKey := include "confluent-operator.imagePullSecret" . | quote }}
{{- if .Capabilities.APIVersions.Has "v1" }}
apiVersion: apps/v1
{{ else if .Capabilities.APIVersions.Has "v1beta2" }}
apiVersion: apps/v1beta2
{{- else }}
apiVersion: apps/v1beta1
{{- end }}
kind: Deployment
metadata:
  {{- include "confluent-operator.labels" . }}
  name: {{ .Values.name }}
  namespace:  {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      {{- if not (empty $.Values.affinity) }}
      affinity:
{{ toYaml .Values.affinity | trim | indent 8 }}
      {{- end }}
      {{- if not (empty $.Values.tolerations) }}
      tolerations:
{{ toYaml .Values.tolerations | trim | indent 6 }}
      {{- end }}
      containers:
      - args:
        - --proxy={{ .Values.global.provider.name }}
       {{- if contains "aws" .Values.global.provider.name }}
        - --region={{ .Values.global.provider.region }}
       {{- end }}
        {{- if .Values.debug }}
        - --debug
        {{- end }}
        - --provider=on-prem
        - --prefixed-secrets
        - --disable-hostpath
        - --disable-pod-controller
        - --enable-logical-cluster-secrets=false
        image: {{ .Values.global.provider.registry.fqdn }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Values.name }}
        #{{- if .Values.global.provider.registry.credential.required }}
        #env:
        #- name: DOCKER_CREDS
        #  value: {{ include "confluent-operator.imagePullSecret" . | quote }}
        #{{- end }}    
        resources:
{{ toYaml .Values.resources | trim | indent 10 }}
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      serviceAccountName: {{ .Values.name }}
      restartPolicy: Always
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}


